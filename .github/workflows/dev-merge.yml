on:
  pull_request:
    types:
      - closed
    branches:
      - dev

jobs:
  if_merged:
    env:
      DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
      OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
      OPTIMISTIC_ETHERSCAN_API_KEY: ${{ secrets.OPTIMISTIC_ETHERSCAN_API_KEY }}
      GOERLI_RPC_URL: ${{ secrets.GOERLI_RPC_URL }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          submodules: recursive
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install submodules
        run: git submodule update --init

      - name: Install yarn dependencies
        run: yarn

      - name: Run forge install
        run: forge install

      - name: Deploy contracts
      - run: |
          set -e

          last_tag=$(git describe --tags --abbrev=0)

          git branch last_tag_branch $last_tag
          git switch last_tag_branch

          last_tag_badges=$(cat src/Badges.sol)
          last_tag_raft=$(cat src/Raft.sol)
          last_tag_sdh=$(cat src/SpecDataHolder.sol)

          git switch dev

          current_badges=$(cat src/Badges.sol)
          current_raft=$(cat src/Raft.sol)
          current_sdh=$(cat src/SpecDataHolder.sol)

          # Compare the contents of src/Badges.sol between the latest tag and the current commit
          if [ "$last_tag_badges" != "$current_badges" ]; then
            echo "theres a difference!"
            # if the code of the Badges contract has changed since the time we tagged the repo, we should deploy a new implementation
            
            ## deploy and verify 
            # note: here we're getting the output of forge create and grabbing the address
            badgesImplementation=$(forge create src/Badges.sol:Badges --private-key $DEPLOYER_PRIVATE_KEY --verify --rpc-url $GOERLI_RPC_URL --etherscan-api-key $ETHERSCAN_API_KEY | grep "Deployed to:" | cut -d " " -f 3)
            echo "badgesImplementation = $badgesImplementation"
            
            # run our js file that creates the proposal
            node scripts/createProposal.js $badgesImplementation 'badges' 'goerli'
            echo "BADGES: deployed implementation, verified, proposed"
          else
            echo "no changes in Badges between this commit and the last tagged version"
          fi

          )

          for network in "${networks[@]}"; do
            last_tag_badges=$(cat src/Badges.sol)
            last_tag_raft=$(cat src/Raft.sol)
            last_tag_sdh=$(cat src/SpecDataHolder.sol)

            if [ "$last_tag_badges" != "$current_badges" ]; then
              badgesImplementation=$(forge create src/Badges.sol:Badges --private-key $DEPLOYER_PRIVATE_KEY --verify --rpc-url ${network.rpc_url} --etherscan-api-key ${network.etherscan_api_key} | grep "Deployed to:" | cut -d " " -f 3) || {
                echo "Failed to deploy the new Badges implementation on ${network.name}"
                exit 1
              }
              node scripts/createProposal.js $badgesImplementation 'badges' ${network.name} || {
                echo "Failed to create a proposal for the new Badges implementation on ${network.name}"
                exit 1
              }
            fi

            ## deploy and verify 
            # note: here we're getting the output of forge create and grabbing the address
            sdhImplementation=$(forge create src/SpecDataHolder.sol:SpecDataHolder --private-key $DEPLOYER_PRIVATE_KEY --verify --rpc-url $GOERLI_RPC_URL --etherscan-api-key $ETHERSCAN_API_KEY | grep "Deployed to:" | cut -d " " -f 3)
            echo "sdhImplementation = $sdhImplementation"

            # run our js file that creates the proposal
            node scripts/createProposal.js $sdhImplementation 'specDataHolder' 'goerli'
            echo "SpecDataHolder: deployed implementation, verified, proposed"
          else
            echo "no changes in SpecDataHolder between this commit and the last tagged version"            
          fi
