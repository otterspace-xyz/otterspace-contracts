on:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    env:
      DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
      GOERLI_RPC_URL: ${{ secrets.GOERLI_RPC_URL }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      DEFENDER_TEAM_API_KEY: ${{ secrets.DEFENDER_TEAM_API_KEY }}
      DEFENDER_TEAM_API_SECRET_KEY: ${{ secrets.DEFENDER_TEAM_API_SECRET_KEY }}
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          submodules: recursive
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install submodules
        run: git submodule update --init

      - name: Install yarn dependencies
        run: yarn --frozen-lockfile

      - name: Run forge install
        run: forge install

      - name: Compile hardhat
        env:
          CI: true
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          DEFENDER_TEAM_API_KEY: ${{ secrets.DEFENDER_TEAM_API_KEY }}
          DEFENDER_TEAM_API_SECRET_KEY: ${{ secrets.DEFENDER_TEAM_API_SECRET_KEY }}
        run: |
          npx hardhat compile

      - run: |
          # Get the latest tag
          last_tag=$(git describe --tags --abbrev=0)

          # Create new branch from that tag
          git branch last_tag_branch $last_tag

          #switch to it
          git switch last_tag_branch

          # Get the contents of src/Badges.sol from the latest tag
          last_tag_badges=$(cat src/Badges.sol)

          # Checkout the current commit
          git switch dev

          # Get the contents of src/Badges.sol from the current commit
          current_badges=$(cat src/Badges.sol)

          # Compare the contents of src/Badges.sol between the latest tag and the current commit
          if [ "$last_tag_badges" != "$current_badges" ]; then
            echo "ECHO BEFORE SCRIPT RUNS"
            npx hardhat proposeUpgrade Badges --network goerli
            echo "ECHO AFTER SCRIPT RUNS"
          fi

      - run: |
          # Tag the current commit with the version specified in package.json
          version=$(grep '"version":' package.json | cut -d'"' -f4)
          git tag $version
          git push origin $version
