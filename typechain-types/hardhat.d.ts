/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC4973",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4973__factory>;
    getContractFactory(
      name: "ERC4973Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4973Permit__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC4973",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4973__factory>;
    getContractFactory(
      name: "IERC4973Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4973Permit__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "DSTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTest__factory>;
    getContractFactory(
      name: "StdError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdError__factory>;
    getContractFactory(
      name: "StdStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdStorage__factory>;
    getContractFactory(
      name: "Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Test__factory>;
    getContractFactory(
      name: "Vm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vm__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "Badges",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Badges__factory>;
    getContractFactory(
      name: "BadgesTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgesTest__factory>;
    getContractFactory(
      name: "MockBadges",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockBadges__factory>;

    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC4973",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4973>;
    getContractAt(
      name: "ERC4973Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4973Permit>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC4973",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4973>;
    getContractAt(
      name: "IERC4973Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4973Permit>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "DSTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTest>;
    getContractAt(
      name: "StdError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdError>;
    getContractAt(
      name: "StdStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdStorage>;
    getContractAt(
      name: "Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Test>;
    getContractAt(
      name: "Vm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vm>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "Badges",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Badges>;
    getContractAt(
      name: "BadgesTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgesTest>;
    getContractAt(
      name: "MockBadges",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockBadges>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
